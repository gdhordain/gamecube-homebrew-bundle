name: Check for update
on:
  workflow_call:
    inputs:
      name:
        description: "Name of the component"
        type: string
  workflow_dispatch:
    inputs:
      name:
        description: "Name of the component"
        type: choice
        options:
          - cleanrip
          - gbi
          - gcmm
          - swiss

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      OWNER: ${{ steps.setup.outputs.OWNER }}
      REPOSITORY: ${{ steps.setup.outputs.REPOSITORY }}
    steps:
      - id: setup
        run: |
          case "${{ inputs.name }}" in
            "swiss")
            echo "OWNER=emukidid" >> $GITHUB_OUTPUT
            echo "REPOSITORY=swiss-gc" >> $GITHUB_OUTPUT
            ;;
            "gcmm")
            echo "OWNER=suloku" >> $GITHUB_OUTPUT
            echo "REPOSITORY=gcmm" >> $GITHUB_OUTPUT
            ;;
            "cleanrip")
            echo "OWNER=emukidid" >> $GITHUB_OUTPUT
            echo "REPOSITORY=cleanrip" >> $GITHUB_OUTPUT
            ;;
            "gbi")
            ;;
            *)
            echo "Invalid component name ${{ inputs.name }}"
            exit 1
            ;;
          esac
  check-for-update:
    name: Check for update
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      RELEASE: ${{ steps.check-for-update.outputs.RELEASE }}
      TAG: ${{ steps.check-for-update.outputs.TAG }}
    steps:
      - uses: actions/checkout@v4
        if: ${{ inputs.name != 'gbi' }}
        with:
          sparse-checkout: |
            build/releases
      - id: component-release
        if: ${{ inputs.name != 'gbi' }}
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: ${{ needs.setup.outputs.OWNER }}
          repo: ${{ needs.setup.outputs.REPOSITORY }}
          excludes: prerelease, draft
      - id: check-for-update
        run: |
          if [[ "${{ inputs.name }}" = 'gbi' ]]
          then
            echo "RELEASE=bypass_gbi" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          NEW="https://github.com/${{ needs.setup.outputs.OWNER }}/${{ needs.setup.outputs.REPOSITORY }}/releases/tag/${{ steps.component-release.outputs.release }}"
          CURRENT=$(cat build/releases/${{ inputs.name }}-release.txt)
          
          if [[ "" != "$NEW" && "$NEW" != "$CURRENT" ]]; then
            echo "New ${{ inputs.name }} release available: ${{ steps.component-release.outputs.release }}"
            echo $NEW > build/releases/${{ inputs.name }}-release.txt
            echo "RELEASE=$NEW" >> $GITHUB_OUTPUT
            echo "TAG=${{ steps.component-release.outputs.release }}" >> $GITHUB_OUTPUT
          else
            echo "No new ${{ inputs.name }} release available"
          fi
  update-component:
    name: Update component
    runs-on: ubuntu-latest
    needs: check-for-update
    if: ${{ needs.check-for-update.outputs.RELEASE != '' }}
    steps:
      - uses: actions/checkout@v4
      - name: setup 7-Zip
        if: ${{ inputs.name == 'swiss' }}
        uses: milliewalky/setup-7-zip@v2
      - id: update-component
        run: |
          echo "${{ needs.check-for-update.outputs.RELEASE }}" > build/releases/${{ inputs.name }}-release.txt
          
          mkdir tmp
          
          case "${{ inputs.name }}" in
            "swiss")
            ARCHIVE=$(echo "${{ needs.check-for-update.outputs.RELEASE }}" | sed -r 's/\/tag\//\/download\//' | sed -r 's/(\/v[0-9.]+(r[0-9]+))$/\1\/swiss_\2.7z/')
            curl -L $ARCHIVE -o tmp/swiss.7z
            ls -l tmp
            7z e tmp/swiss.7z swiss_r*/DOL/swiss_r*.dol
            mv swiss_r*.dol build/AUTOEXEC.DOL
            ;;
          
            "gcmm")
            ARCHIVE=$(echo "${{ needs.check-for-update.outputs.RELEASE }}" | sed -r 's/\/tag\//\/download\//' | sed -r 's/\/([0-9.]+)$/\/\1\/gcmm_\1.zip/')
            curl -L $ARCHIVE -o tmp/gcmm.zip
            ls -l tmp
            unzip -j tmp/gcmm.zip 'gcmm_*/gamecube/gcmm_GC.dol'
            mv gcmm_GC.dol build/gcmm_GC.dol
            ;;
          
            "cleanrip")
            ARCHIVE=$(echo "${{ needs.check-for-update.outputs.RELEASE }}" | sed -r -e 's/\/tag\//\/download\//' -e 's/$/\/CleanRip-v${{ needs.check-for-update.outputs.TAG }}-gc.zip/')
            curl -L $ARCHIVE -o build/cleanrip-gc.dol
            ;;
          
            "gbi")
            cd tmp
            curl -OJvvv https://files.extremscorner.org/gamecube/apps/gbi/latest
            ls -l
            ls | sed -r -e 's,^,https://files.extremscorner.org/gamecube/apps/gbi/,' -e 's/\/gbi-([0-9]+).zip$/\/\1/' > ../build/releases/${{ inputs.name }}-release.txt
            unzip -j gbi-*.zip 'apps/gbi/gbi.dol'
            mv gbi.dol ../build/gbi.dol
            cd ..
            ;;
          
            *)
            exit 1
            ;;
          esac
          
          rm -rf tmp
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          title: Update ${{ inputs.name }} component
          commit-message: Update ${{ inputs.name }} component
          branch: update-${{ inputs.name }}-component